module.exports = {"version":3,"file":"main.js","sources":["../src/utils/Traveler/Traveler.ts","../src/utils/Profiler/Profiler.ts","../src/Helpers/TowerHelper.ts","../src/Helpers/SpawnHelper.ts","../node_modules/tslib/tslib.es6.js","../src/Managers/RoleManager.ts","../src/main.ts"],"sourcesContent":["/**\n * To start using Traveler, require it in main.js:\n * Example: var Traveler = require('Traveler.js');\n */\n\nexport class Traveler {\n  private static structureMatrixCache: { [roomName: string]: CostMatrix } = {};\n  private static creepMatrixCache: { [roomName: string]: CostMatrix } = {};\n  private static creepMatrixTick: number;\n  private static structureMatrixTick: number;\n\n  /**\n   * move creep to destination\n   * @param creep\n   * @param destination\n   * @param options\n   * @returns {number}\n   */\n\n  public static travelTo (creep: Creep, destination: HasPos | RoomPosition, options: TravelToOptions = {}): number {\n    // uncomment if you would like to register hostile rooms entered\n    // this.updateRoomStatus(creep.room);\n\n    if (!destination) {\n      return ERR_INVALID_ARGS\n    }\n\n    if (creep.fatigue > 0) {\n      Traveler.circle(creep.pos, 'aqua', 0.3)\n      return ERR_TIRED\n    }\n\n    destination = this.normalizePos(destination)\n\n    // manage case where creep is nearby destination\n    const rangeToDestination = creep.pos.getRangeTo(destination)\n    if (options.range && rangeToDestination <= options.range) {\n      return OK\n    } else if (rangeToDestination <= 1) {\n      if (rangeToDestination === 1 && !options.range) {\n        const direction = creep.pos.getDirectionTo(destination)\n        if (options.returnData) {\n          options.returnData.nextPos = destination\n          options.returnData.path = direction.toString()\n        }\n        return creep.move(direction)\n      }\n      return OK\n    }\n\n    // initialize data object\n    if (!creep.memory._trav) {\n      // @ts-ignore\n      delete creep.memory._travel\n      creep.memory._trav = {}\n    }\n    const travelData = creep.memory._trav as TravelData\n\n    const state = this.deserializeState(travelData, destination)\n\n    // uncomment to visualize destination\n    // this.circle(destination.pos, \"orange\");\n\n    // check if creep is stuck\n    if (this.isStuck(creep, state)) {\n      state.stuckCount++\n      Traveler.circle(creep.pos, 'magenta', state.stuckCount * 0.2)\n    } else {\n      state.stuckCount = 0\n    }\n\n    // handle case where creep is stuck\n    if (!options.stuckValue) {\n      options.stuckValue = DEFAULT_STUCK_VALUE\n    }\n    if (state.stuckCount >= options.stuckValue && Math.random() > 0.5) {\n      options.ignoreCreeps = false\n      options.freshMatrix = true\n      delete travelData.path\n    }\n\n    // TODO:handle case where creep moved by some other function, but destination is still the same\n\n    // delete path cache if destination is different\n    if (!this.samePos(state.destination, destination)) {\n      if (options.movingTarget && state.destination.isNearTo(destination)) {\n        travelData.path += state.destination.getDirectionTo(destination)\n        state.destination = destination\n      } else {\n        delete travelData.path\n      }\n    }\n\n    if (options.repath && Math.random() < options.repath) {\n      // add some chance that you will find a new path randomly\n      delete travelData.path\n    }\n\n    // pathfinding\n    let newPath = false\n    if (!travelData.path) {\n      newPath = true\n      if (creep.spawning) {\n        return ERR_BUSY\n      }\n\n      state.destination = destination\n\n      const cpu = Game.cpu.getUsed()\n      const ret = this.findTravelPath(creep.pos, destination, options)\n\n      const cpuUsed = Game.cpu.getUsed() - cpu\n      // @ts-ignore\n      state.cpu = _.round(cpuUsed + state.cpu)\n      if (state.cpu > REPORT_CPU_THRESHOLD) {\n        // see note at end of file for more info on this\n        console.log(`TRAVELER: heavy cpu use: ${creep.name}, cpu: ${state.cpu} origin: ${\n          creep.pos}, dest: ${destination}`)\n      }\n\n      let color = 'orange'\n      if (ret.incomplete) {\n        // uncommenting this is a great way to diagnose creep behavior issues\n        // console.log(`TRAVELER: incomplete path for ${creep.name}`);\n        color = 'red'\n      }\n\n      if (options.returnData) {\n        options.returnData.pathfinderReturn = ret\n      }\n\n      travelData.path = Traveler.serializePath(creep.pos, ret.path, color)\n      state.stuckCount = 0\n    }\n\n    this.serializeState(creep, destination, state, travelData)\n\n    if (!travelData.path || travelData.path.length === 0) {\n      return ERR_NO_PATH\n    }\n\n    // consume path\n    if (state.stuckCount === 0 && !newPath) {\n      travelData.path = travelData.path.substr(1)\n    }\n\n    const nextDirection = parseInt(travelData.path[0], 10)\n    if (options.returnData) {\n      if (nextDirection) {\n        const nextPos = Traveler.positionAtDirection(creep.pos, nextDirection)\n        if (nextPos) {\n          options.returnData.nextPos = nextPos\n        }\n      }\n      options.returnData.state = state\n      options.returnData.path = travelData.path\n    }\n    // @ts-ignore\n    return creep.move(nextDirection)\n  }\n\n  /**\n   * make position objects consistent so that either can be used as an argument\n   * @param destination\n   * @returns {any}\n   */\n\n  public static normalizePos (destination: HasPos | RoomPosition): RoomPosition {\n    if (!(destination instanceof RoomPosition)) {\n      return destination.pos\n    }\n    return destination\n  }\n\n  /**\n   * check if room should be avoided by findRoute algorithm\n   * @param roomName\n   * @returns {RoomMemory|number}\n   */\n\n  public static checkAvoid (roomName: string) {\n    return Memory.rooms && Memory.rooms[roomName] && Memory.rooms[roomName].avoid\n  }\n\n  /**\n   * check if a position is an exit\n   * @param pos\n   * @returns {boolean}\n   */\n\n  public static isExit (pos: Coord): boolean {\n    return pos.x === 0 || pos.y === 0 || pos.x === 49 || pos.y === 49\n  }\n\n  /**\n   * check two coordinates match\n   * @param pos1\n   * @param pos2\n   * @returns {boolean}\n   */\n\n  public static sameCoord (pos1: Coord, pos2: Coord): boolean {\n    return pos1.x === pos2.x && pos1.y === pos2.y\n  }\n\n  /**\n   * check if two positions match\n   * @param pos1\n   * @param pos2\n   * @returns {boolean}\n   */\n\n  public static samePos (pos1: RoomPosition, pos2: RoomPosition) {\n    return this.sameCoord(pos1, pos2) && pos1.roomName === pos2.roomName\n  }\n\n  /**\n   * draw a circle at position\n   * @param pos\n   * @param color\n   * @param opacity\n   */\n\n  public static circle (pos: RoomPosition, color: string, opacity?: number) {\n    new RoomVisual(pos.roomName).circle(pos, {\n      radius: 0.45,\n      fill: 'transparent',\n      stroke: color,\n      strokeWidth: 0.15,\n      opacity: opacity\n    })\n  }\n\n  /**\n   * update memory on whether a room should be avoided based on controller owner\n   * @param room\n   */\n\n  public static updateRoomStatus (room: Room) {\n    if (!room) {\n      return\n    }\n    if (room.controller) {\n      if (room.controller.owner && !room.controller.my) {\n        room.memory.avoid = true\n      } else {\n        delete room.memory.avoid\n      }\n    }\n  }\n\n  /**\n   * find a path from origin to destination\n   * @param origin\n   * @param destination\n   * @param options\n   * @returns {PathfinderReturn}\n   */\n\n  public static findTravelPath (origin: RoomPosition | HasPos, destination: RoomPosition | HasPos,\n    options: TravelToOptions = {}): PathfinderReturn {\n    // @ts-ignore\n    _.defaults(options, {\n      ignoreCreeps: true,\n      maxOps: DEFAULT_MAXOPS,\n      range: 1\n    })\n\n    if (options.movingTarget) {\n      options.range = 0\n    }\n\n    origin = this.normalizePos(origin)\n    destination = this.normalizePos(destination)\n    const originRoomName = origin.roomName\n    const destRoomName = destination.roomName\n\n    // check to see whether findRoute should be used\n    const roomDistance = Game.map.getRoomLinearDistance(origin.roomName, destination.roomName)\n    let allowedRooms = options.route\n    if (!allowedRooms && (options.useFindRoute || (options.useFindRoute === undefined && roomDistance > 2))) {\n      const route = this.findRoute(origin.roomName, destination.roomName, options)\n      if (route) {\n        allowedRooms = route\n      }\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    let roomsSearched = 0\n\n    const callback = (roomName: string): CostMatrix | boolean => {\n      if (allowedRooms) {\n        if (!allowedRooms[roomName]) {\n          return false\n        }\n      } else if (!options.allowHostile && Traveler.checkAvoid(roomName) &&\n        roomName !== destRoomName && roomName !== originRoomName) {\n        return false\n      }\n\n      roomsSearched += 1\n\n      let matrix\n      const room = Game.rooms[roomName]\n      if (room) {\n        if (options.ignoreStructures) {\n          matrix = new PathFinder.CostMatrix()\n          if (!options.ignoreCreeps) {\n            Traveler.addCreepsToMatrix(room, matrix)\n          }\n        } else if (options.ignoreCreeps || roomName !== originRoomName) {\n          matrix = this.getStructureMatrix(room, options.freshMatrix)\n        } else {\n          matrix = this.getCreepMatrix(room)\n        }\n\n        if (options.obstacles) {\n          matrix = matrix.clone()\n          for (const obstacle of options.obstacles) {\n            if (obstacle.pos.roomName !== roomName) {\n              continue\n            }\n            matrix.set(obstacle.pos.x, obstacle.pos.y, 0xff)\n          }\n        }\n      }\n\n      if (options.roomCallback) {\n        if (!matrix) {\n          matrix = new PathFinder.CostMatrix()\n        }\n        const outcome = options.roomCallback(roomName, matrix.clone())\n        if (outcome !== undefined) {\n          return outcome\n        }\n      }\n\n      return matrix as CostMatrix\n    }\n\n    let ret = PathFinder.search(origin, { pos: destination, range: options.range! }, {\n      maxOps: options.maxOps,\n      maxRooms: options.maxRooms,\n      plainCost: options.offRoad ? 1 : options.ignoreRoads ? 1 : 2,\n      swampCost: options.offRoad ? 1 : options.ignoreRoads ? 5 : 10,\n      roomCallback: callback\n    })\n\n    if (ret.incomplete && options.ensurePath) {\n      if (options.useFindRoute === undefined) {\n        // handle case where pathfinder failed at a short distance due to not using findRoute\n        // can happen for situations where the creep would have to take an uncommonly indirect path\n        // options.allowedRooms and options.routeCallback can also be used to handle this situation\n        if (roomDistance <= 2) {\n          console.log('TRAVELER: path failed without findroute, trying with options.useFindRoute = true')\n          console.log(`from: ${origin}, destination: ${destination}`)\n          options.useFindRoute = true\n          ret = this.findTravelPath(origin, destination, options)\n          console.log(`TRAVELER: second attempt was ${ret.incomplete ? 'not ' : ''}successful`)\n          return ret\n        }\n\n        // TODO: handle case where a wall or some other obstacle is blocking the exit assumed by findRoute\n      } else {\n\n      }\n    }\n\n    return ret\n  }\n\n  /**\n   * find a viable sequence of rooms that can be used to narrow down pathfinder's search algorithm\n   * @param origin\n   * @param destination\n   * @param options\n   * @returns {{}}\n   */\n\n  public static findRoute (origin: string, destination: string,\n    options: TravelToOptions = {}): { [roomName: string]: boolean } | void {\n    const restrictDistance = options.restrictDistance || Game.map.getRoomLinearDistance(origin, destination) + 10\n    const allowedRooms = { [origin]: true, [destination]: true }\n\n    let highwayBias = 1\n    if (options.preferHighway) {\n      highwayBias = 2.5\n      if (options.highwayBias) {\n        highwayBias = options.highwayBias\n      }\n    }\n\n    const ret = Game.map.findRoute(origin, destination, {\n      routeCallback: (roomName: string) => {\n        if (options.routeCallback) {\n          const outcome = options.routeCallback(roomName)\n          if (outcome !== undefined) {\n            return outcome\n          }\n        }\n\n        const rangeToRoom = Game.map.getRoomLinearDistance(origin, roomName)\n        if (rangeToRoom > restrictDistance) {\n          // room is too far out of the way\n          return Number.POSITIVE_INFINITY\n        }\n\n        if (!options.allowHostile && Traveler.checkAvoid(roomName) &&\n          roomName !== destination && roomName !== origin) {\n          // room is marked as \"avoid\" in room memory\n          return Number.POSITIVE_INFINITY\n        }\n\n        let parsed\n        if (options.preferHighway) {\n          parsed = /^[WE]([0-9]+)[NS]([0-9]+)$/.exec(roomName) as any\n          const isHighway = (parsed[1] % 10 === 0) || (parsed[2] % 10 === 0)\n          if (isHighway) {\n            return 1\n          }\n        }\n        // SK rooms are avoided when there is no vision in the room, harvested-from SK rooms are allowed\n        if (!options.allowSK && !Game.rooms[roomName]) {\n          if (!parsed) {\n            parsed = /^[WE]([0-9]+)[NS]([0-9]+)$/.exec(roomName) as any\n          }\n          const fMod = parsed[1] % 10\n          const sMod = parsed[2] % 10\n          const isSK = !(fMod === 5 && sMod === 5) &&\n            ((fMod >= 4) && (fMod <= 6)) &&\n            ((sMod >= 4) && (sMod <= 6))\n          if (isSK) {\n            return 10 * highwayBias\n          }\n        }\n\n        return highwayBias\n      }\n    })\n\n    // @ts-ignore\n    if (!_.isArray(ret)) {\n      console.log(`couldn't findRoute to ${destination}`)\n      return\n    }\n    for (const value of ret) {\n      allowedRooms[value.room] = true\n    }\n\n    return allowedRooms\n  }\n\n  /**\n   * check how many rooms were included in a route returned by findRoute\n   * @param origin\n   * @param destination\n   * @returns {number}\n   */\n\n  public static routeDistance (origin: string, destination: string): number | void {\n    const linearDistance = Game.map.getRoomLinearDistance(origin, destination)\n    if (linearDistance >= 32) {\n      return linearDistance\n    }\n\n    const allowedRooms = this.findRoute(origin, destination)\n    if (allowedRooms) {\n      return Object.keys(allowedRooms).length\n    }\n  }\n\n  /**\n   * build a cost matrix based on structures in the room. Will be cached for more than one tick. Requires vision.\n   * @param room\n   * @param freshMatrix\n   * @returns {any}\n   */\n\n  public static getStructureMatrix (room: Room, freshMatrix?: boolean): CostMatrix {\n    if (!this.structureMatrixCache[room.name] || (freshMatrix && Game.time !== this.structureMatrixTick)) {\n      this.structureMatrixTick = Game.time\n      const matrix = new PathFinder.CostMatrix()\n      this.structureMatrixCache[room.name] = Traveler.addStructuresToMatrix(room, matrix, 1)\n    }\n    return this.structureMatrixCache[room.name]\n  }\n\n  /**\n   * build a cost matrix based on creeps and structures in the room. Will be cached for one tick. Requires vision.\n   * @param room\n   * @returns {any}\n   */\n\n  public static getCreepMatrix (room: Room) {\n    if (!this.creepMatrixCache[room.name] || Game.time !== this.creepMatrixTick) {\n      this.creepMatrixTick = Game.time\n      this.creepMatrixCache[room.name] = Traveler.addCreepsToMatrix(room,\n        this.getStructureMatrix(room, true).clone())\n    }\n    return this.creepMatrixCache[room.name]\n  }\n\n  /**\n   * add structures to matrix so that impassible structures can be avoided and roads given a lower cost\n   * @param room\n   * @param matrix\n   * @param roadCost\n   * @returns {CostMatrix}\n   */\n\n  public static addStructuresToMatrix (room: Room, matrix: CostMatrix, roadCost: number): CostMatrix {\n    const impassibleStructures: Structure[] = []\n    for (const structure of room.find<Structure>(FIND_STRUCTURES)) {\n      if (structure instanceof StructureRampart) {\n        if (!structure.my && !structure.isPublic) {\n          impassibleStructures.push(structure)\n        }\n      } else if (structure instanceof StructureRoad) {\n        matrix.set(structure.pos.x, structure.pos.y, roadCost)\n      } else if (structure instanceof StructureContainer) {\n        matrix.set(structure.pos.x, structure.pos.y, 5)\n      } else {\n        impassibleStructures.push(structure)\n      }\n    }\n\n    // @ts-ignore\n    for (const site of room.find<ConstructionSite>(FIND_MY_CONSTRUCTION_SITES)) {\n      if (site.structureType === STRUCTURE_CONTAINER || site.structureType === STRUCTURE_ROAD ||\n        site.structureType === STRUCTURE_RAMPART) {\n        continue\n      }\n      matrix.set(site.pos.x, site.pos.y, 0xff)\n    }\n\n    for (const structure of impassibleStructures) {\n      matrix.set(structure.pos.x, structure.pos.y, 0xff)\n    }\n\n    return matrix\n  }\n\n  /**\n   * add creeps to matrix so that they will be avoided by other creeps\n   * @param room\n   * @param matrix\n   * @returns {CostMatrix}\n   */\n\n  public static addCreepsToMatrix (room: Room, matrix: CostMatrix): CostMatrix {\n    // @ts-ignore\n    room.find<Creep>(FIND_CREEPS).forEach((creep: Creep) => matrix.set(creep.pos.x, creep.pos.y, 0xff))\n    return matrix\n  }\n\n  /**\n   * serialize a path, traveler style. Returns a string of directions.\n   * @param startPos\n   * @param path\n   * @param color\n   * @returns {string}\n   */\n\n  public static serializePath (startPos: RoomPosition, path: RoomPosition[], color = 'orange'): string {\n    let serializedPath = ''\n    let lastPosition = startPos\n    this.circle(startPos, color)\n    for (const position of path) {\n      if (position.roomName === lastPosition.roomName) {\n        new RoomVisual(position.roomName)\n          .line(position, lastPosition, { color: color, lineStyle: 'dashed' })\n        serializedPath += lastPosition.getDirectionTo(position)\n      }\n      lastPosition = position\n    }\n    return serializedPath\n  }\n\n  /**\n   * returns a position at a direction relative to origin\n   * @param origin\n   * @param direction\n   * @returns {RoomPosition}\n   */\n\n  public static positionAtDirection (origin: RoomPosition, direction: number): RoomPosition | void {\n    const offsetX = [0, 0, 1, 1, 1, 0, -1, -1, -1]\n    const offsetY = [0, -1, -1, 0, 1, 1, 1, 0, -1]\n    const x = origin.x + offsetX[direction]\n    const y = origin.y + offsetY[direction]\n    if (x > 49 || x < 0 || y > 49 || y < 0) {\n      return\n    }\n    return new RoomPosition(x, y, origin.roomName)\n  }\n\n  private static deserializeState (travelData: TravelData, destination: RoomPosition): TravelState {\n    const state = {} as TravelState\n    if (travelData.state) {\n      state.lastCoord = { x: travelData.state[STATE_PREV_X], y: travelData.state[STATE_PREV_Y] }\n      state.cpu = travelData.state[STATE_CPU]\n      state.stuckCount = travelData.state[STATE_STUCK]\n      state.destination = new RoomPosition(travelData.state[STATE_DEST_X], travelData.state[STATE_DEST_Y],\n        travelData.state[STATE_DEST_ROOMNAME])\n    } else {\n      state.cpu = 0\n      state.destination = destination\n    }\n    return state\n  }\n\n  private static serializeState (creep: Creep, destination: RoomPosition, state: TravelState, travelData: TravelData) {\n    travelData.state = [creep.pos.x, creep.pos.y, state.stuckCount, state.cpu, destination.x, destination.y,\n      destination.roomName]\n  }\n\n  private static isStuck (creep: Creep, state: TravelState): boolean {\n    let stuck = false\n    if (state.lastCoord !== undefined) {\n      if (this.sameCoord(creep.pos, state.lastCoord)) {\n        // didn't move\n        stuck = true\n      } else if (this.isExit(creep.pos) && this.isExit(state.lastCoord)) {\n        // moved against exit\n        stuck = true\n      }\n    }\n\n    return stuck\n  }\n}\n\n// this might be higher than you wish, setting it lower is a great way to diagnose creep behavior issues. When creeps\n// need to repath to often or they aren't finding valid paths, it can sometimes point to problems elsewhere in your code\nconst REPORT_CPU_THRESHOLD = 1000\n\nconst DEFAULT_MAXOPS = 20000\nconst DEFAULT_STUCK_VALUE = 2\nconst STATE_PREV_X = 0\nconst STATE_PREV_Y = 1\nconst STATE_STUCK = 2\nconst STATE_CPU = 3\nconst STATE_DEST_X = 4\nconst STATE_DEST_Y = 5\nconst STATE_DEST_ROOMNAME = 6\n\n// assigns a function to Creep.prototype: creep.travelTo(destination)\nCreep.prototype.travelTo = function (destination: RoomPosition | { pos: RoomPosition }, options?: TravelToOptions) {\n  return Traveler.travelTo(this, destination, options)\n}\n","/* tslint:disable:ban-types */\nexport function init (): Profiler {\n  const defaults = {\n    data: {},\n    total: 0\n  }\n\n  if (!Memory.profiler) { Memory.profiler = defaults }\n\n  const cli: Profiler = {\n    clear () {\n      const running = isEnabled()\n      Memory.profiler = defaults\n      if (running) { Memory.profiler.start = Game.time }\n      return 'Profiler Memory cleared'\n    },\n\n    output () {\n      outputProfilerData()\n      return 'Done'\n    },\n\n    start () {\n      Memory.profiler.start = Game.time\n      return 'Profiler started'\n    },\n\n    status () {\n      if (isEnabled()) {\n        return 'Profiler is running'\n      }\n      return 'Profiler is stopped'\n    },\n\n    stop () {\n      if (!isEnabled()) { return }\n      const timeRunning = Game.time - Memory.profiler.start!\n      Memory.profiler.total += timeRunning\n      delete Memory.profiler.start\n      return 'Profiler stopped'\n    },\n\n    toString () {\n      return 'Profiler.start() - Starts the profiler\\n' +\n          'Profiler.stop() - Stops/Pauses the profiler\\n' +\n          'Profiler.status() - Returns whether is profiler is currently running or not\\n' +\n          'Profiler.output() - Pretty-prints the collected profiler data to the console\\n' +\n          this.status()\n    }\n  }\n\n  return cli\n}\n\nfunction wrapFunction (obj: object, key: PropertyKey, className?: string) {\n  const descriptor = Reflect.getOwnPropertyDescriptor(obj, key)\n  if (!descriptor || descriptor.get || descriptor.set) { return }\n\n  if (key === 'constructor') { return }\n\n  const originalFunction = descriptor.value\n  if (!originalFunction || typeof originalFunction !== 'function') { return }\n\n  // set a key for the object in memory\n  if (!className) { className = obj.constructor ? `${obj.constructor.name}` : '' }\n  // @ts-ignore\n  const memKey = className + `:${key}`\n\n  // set a tag so we don't wrap a function twice\n  // @ts-ignore\n  const savedName = `__${key}__`\n  if (Reflect.has(obj, savedName)) { return }\n\n  Reflect.set(obj, savedName, originalFunction)\n\n  /// ////////\n\n  Reflect.set(obj, key, function (this: any, ...args: any[]) {\n    if (isEnabled()) {\n      const start = Game.cpu.getUsed()\n      const result = originalFunction.apply(this, args)\n      const end = Game.cpu.getUsed()\n      record(memKey, end - start)\n      return result\n    }\n    return originalFunction.apply(this, args)\n  })\n}\n\nexport function profile(target: Function): void;\nexport function profile(target: object, key: string | symbol, _descriptor: TypedPropertyDescriptor<Function>): void;\nexport function profile (\n  target: object | Function,\n  key?: string | symbol,\n  _descriptor?: TypedPropertyDescriptor<Function>\n): void {\n  // eslint-disable-next-line no-undef\n  if (!__PROFILER_ENABLED__) { return }\n\n  if (key) {\n    // case of method decorator\n    wrapFunction(target, key)\n    return\n  }\n\n  // case of class decorator\n\n  const ctor = target as any\n  if (!ctor.prototype) { return }\n\n  const className = ctor.name\n  Reflect.ownKeys(ctor.prototype).forEach((k) => {\n    wrapFunction(ctor.prototype, k, className)\n  })\n}\n\nfunction isEnabled (): boolean {\n  return Memory.profiler.start !== undefined\n}\n\nfunction record (key: string | symbol, time: number) {\n  // @ts-ignore\n  if (!Memory.profiler.data[key]) {\n    // @ts-ignore\n    Memory.profiler.data[key] = {\n      calls: 0,\n      time: 0\n    }\n  }\n  // @ts-ignore\n  Memory.profiler.data[key].calls++\n  // @ts-ignore\n  Memory.profiler.data[key].time += time\n}\n\ninterface OutputData {\n  name: string;\n  calls: number;\n  cpuPerCall: number;\n  callsPerTick: number;\n  cpuPerTick: number;\n}\n\nfunction outputProfilerData () {\n  let totalTicks = Memory.profiler.total\n  if (Memory.profiler.start) {\n    totalTicks += Game.time - Memory.profiler.start\n  }\n\n  /// ////\n  // Process data\n  let totalCpu = 0 // running count of average total CPU use per tick\n  let calls: number\n  let time: number\n  let result: Partial<OutputData>\n  const data = Reflect.ownKeys(Memory.profiler.data).map((key) => {\n    // @ts-ignore\n    calls = Memory.profiler.data[key].calls\n    // @ts-ignore\n    time = Memory.profiler.data[key].time\n    result = {}\n    // @ts-ignore\n    result.name = `${key}`\n    result.calls = calls\n    result.cpuPerCall = time / calls\n    result.callsPerTick = calls / totalTicks\n    result.cpuPerTick = time / totalTicks\n    totalCpu += result.cpuPerTick\n    return result as OutputData\n  })\n\n  data.sort((lhs, rhs) => rhs.cpuPerTick - lhs.cpuPerTick)\n\n  /// ////\n  // Format data\n  let output = ''\n\n  // get function name max length\n  const longestName = (_.max(data, (d) => d.name.length)).name.length + 2\n\n  /// / Header line\n  output += _.padRight('Function', longestName)\n  output += _.padLeft('Tot Calls', 12)\n  output += _.padLeft('CPU/Call', 12)\n  output += _.padLeft('Calls/Tick', 12)\n  output += _.padLeft('CPU/Tick', 12)\n  output += _.padLeft('% of Tot\\n', 12)\n\n  /// /  Data lines\n  data.forEach((d) => {\n    output += _.padRight(`${d.name}`, longestName)\n    output += _.padLeft(`${d.calls}`, 12)\n    output += _.padLeft(`${d.cpuPerCall.toFixed(2)}ms`, 12)\n    output += _.padLeft(`${d.callsPerTick.toFixed(2)}`, 12)\n    output += _.padLeft(`${d.cpuPerTick.toFixed(2)}ms`, 12)\n    output += _.padLeft(`${(d.cpuPerTick / totalCpu * 100).toFixed(0)} %\\n`, 12)\n  })\n\n  /// / Footer line\n  output += `${totalTicks} total ticks measured`\n  output += `\\t\\t\\t${totalCpu.toFixed(2)} average CPU profiled per tick`\n  console.log(output)\n}\n\n// debugging\n// function printObject(obj: object) {\n//   const name = obj.constructor ? obj.constructor.name : (obj as any).name;\n//   console.log(\"  Keys of :\", name, \":\");\n//   Reflect.ownKeys(obj).forEach((k) => {\n//     try {\n//       console.log(`    ${k}: ${Reflect.get(obj, k)}`);\n//     } catch (e) {\n//       // nothing\n//     }\n//   });\n// }\n","export class TowerHelper {\n  public static runDefense(tower: StructureTower): void {\n    const target: Creep | null = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS)\n\n    if (target !== null) {\n      tower.attack(target)\n    }\n  }\n}\n","export class SpawnHelper {\n  private static getSpawnCost (parts: BodyPartConstant[]): number {\n    let partsCost = 0\n    parts.forEach((part) => partsCost += BODYPART_COST[part])\n    return partsCost\n  }\n\n  public static createCustomCreep (spawn: StructureSpawn, energy: number, role: String, parts?: BodyPartConstant[], memory?: CreepMemory): ScreepsReturnCode | string {\n    if (parts === undefined) {\n      parts = [WORK, CARRY, MOVE]\n    }\n    const numParts = parts.length\n    const partsCost = this.getSpawnCost(parts)\n\n    memory = { ...{ role: role, working: false, homeRoom: this.name }, ...memory } as CreepMemory\n\n    const totalParts = Math.floor(energy / partsCost)\n    const body: BodyPartConstant[] = []\n\n    if (totalParts === 1) {\n      body.push(MOVE)\n    }\n\n    for (let i = 0; i < numParts; i++) {\n      for (let j = 0; j < totalParts; j++) {\n        body.push(parts[i])\n      }\n    }\n    return spawn.createCreep(body, undefined, memory)\n  }\n\n  public static createMiner (spawn: StructureSpawn, sourceId: string, containerId: string): ScreepsReturnCode | string {\n    return spawn.createCreep([WORK, WORK, WORK, WORK, WORK, WORK, CARRY, MOVE], undefined, {\n      role: 'miner',\n      sourceId: sourceId,\n      containerId: containerId\n    })\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { profile } from '../utils/Profiler/Profiler'\n\n@profile\nexport class RoleManager {\n  public static runMiner (creep: Creep) {\n    if (!creep.spawning) {\n      /**\n       * @type {Source}\n       */\n      const source: Source | null = Game.getObjectById(creep.memory.sourceId)\n\n      /**\n       * @type {StructureContainer}\n       */\n      const container: StructureContainer | null = Game.getObjectById(creep.memory.containerId)\n      if (container === null) {\n        throw new Error('Miner containerId null.')\n      }\n      // If on the container then harvest energy\n      //    If no energy available, repair container if needed\n      // Otherwise Move to container\n      if (creep.pos.isEqualTo(container.pos)) {\n        if (source !== null && source.energy > 0) {\n          creep.say('⛏️', true)\n          creep.harvest(source)\n        } else if (container.hits < container.hitsMax && creep.store.energy > 0) {\n          creep.say('⚒️', true)\n          creep.repair(container)\n        }\n      } else {\n        if (!creep.fatigue) {\n          creep.say('🏃', true)\n          const moveRes = creep.travelTo(container)\n          if (moveRes !== 0) {\n            console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n          }\n        }\n      }\n    }\n  }\n\n  public static runHarvester (creep: Creep) {\n    if (creep.memory.working === true && creep.carry.energy === 0) {\n      creep.memory.working = false\n    } else if (creep.memory.working === false && creep.carry.energy === creep.carryCapacity) {\n      creep.memory.working = true\n    }\n    if (creep.memory.working === true) {\n      creep.memory.task = 'transfer'\n      creep.say('H_T' + creep.carry.energy)\n      // Get Spawn and extensions that need power\n      const structure = creep.pos.findClosestByPath(FIND_MY_STRUCTURES, {\n        filter: (s) => (s.structureType === STRUCTURE_SPAWN ||\n          s.structureType === STRUCTURE_EXTENSION ||\n          s.structureType === STRUCTURE_TOWER) &&\n          s.energy < s.energyCapacity\n      }) as StructureSpawn | StructureExtension | StructureTower | null\n\n      // If there are no spawns or extensions that require then give energy to storage if\n      // the energy did not come from storage\n      // if ((structure === undefined || structure === null) && creep.memory.fromStorage === false) {\n      //   structure = creep.pos.findClosestByPath(FIND_MY_STRUCTURES, {\n      //     filter: (s) => (s.structureType === STRUCTURE_STORAGE) &&\n      //       (s.store.energy < s.storeCapacity)\n      //   }) as StructureStorage\n      // }\n\n      // If there is something to deposit into then do so\n      if (structure !== null) {\n        console.log('hit again')\n        const creepTransfer = creep.transfer(structure, RESOURCE_ENERGY)\n        console.log('Status(' + creep.name + ') - transfer: ' + creepTransfer)\n        if (creepTransfer === ERR_NOT_IN_RANGE) {\n          if (!creep.fatigue) {\n            const moveRes = creep.travelTo(structure)\n            if (moveRes !== 0) {\n              console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n            }\n          }\n        }\n      }\n    } else {\n      creep.memory.task = 'harvest'\n      creep.say('H_H' + creep.carry.energy)\n      const storage = Game.spawns.Spawn1.room.storage\n      // If there is no storage fall back to harvesting sources\n      if (!storage) {\n        const source: Source | null = creep.pos.findClosestByPath(FIND_SOURCES)\n        if (source !== null) {\n          const creepHarvest = creep.harvest(source)\n          // creep.memory.fromStorage = false\n          // console.log(\"Status(\" + creep.name + \") - harvest: \" + creepHarvest)\n          if (creepHarvest === ERR_NOT_IN_RANGE) {\n            if (!creep.fatigue) {\n              const moveRes = creep.travelTo(source)\n              if (moveRes !== 0) {\n                console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n              }\n            }\n          }\n        }\n        // Otherwise, get energy from storage\n      } else {\n        const creepWithdraw = creep.withdraw(storage, RESOURCE_ENERGY)\n        // creep.memory.fromStorage = true\n        if (creepWithdraw === ERR_NOT_IN_RANGE) {\n          if (!creep.fatigue) {\n            const moveRes = creep.travelTo(storage)\n            if (moveRes !== 0) {\n              console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  public static runAttacker (creep: Creep) {\n    const enemies = creep.room.find(FIND_HOSTILE_CREEPS)\n    if (!Array.isArray(enemies) || enemies.length) {\n      // console.log(enemies[0])\n      // console.log('X: ' + enemies[0].pos.x + '| Y: ' + enemies[0].pos.y)\n      if (enemies[0].owner.username !== 'Orlet') {\n        // console.log(enemies[0].Owner)\n        creep.travelTo(enemies[0])\n        creep.attack(enemies[0])\n      } else if (Game.flags.attack_wait) {\n        creep.travelTo(Game.flags.attack_wait)\n      }\n    } else if (Game.flags.attack_wait) {\n      creep.travelTo(Game.flags.attack_wait)\n    }\n  }\n\n  public static runBuilder (creep: Creep) {\n    if (creep.memory.working === true && creep.carry.energy === 0) {\n      creep.memory.working = false\n    } else if (creep.memory.working === false && creep.carry.energy === creep.carryCapacity) {\n      creep.memory.working = true\n    }\n    if (creep.memory.working === true) {\n      creep.memory.task = 'transfer'\n      creep.say('B_T' + creep.carry.energy)\n\n      // Check for construction sites and build them if possible\n      const constructionSite = creep.pos.findClosestByPath(FIND_CONSTRUCTION_SITES)\n      if (constructionSite !== null) {\n        const creepBuild = creep.build(constructionSite)\n        // console.log(\"Status(\" + creep.name + \") - transfer: \" + creepBuild + \" - \" + constructionSite.pos.x + \":\" + constructionSite.pos.y)\n        if (creepBuild === ERR_NOT_IN_RANGE) {\n          if (!creep.fatigue) {\n            const moveRes = creep.travelTo(constructionSite)\n            if (moveRes !== 0) {\n              console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n            }\n          }\n        }\n      } else {\n        this.runUpgrader(creep)\n        // roleHarvester.run(creep)\n      }\n    } else {\n      creep.memory.task = 'harvest'\n      creep.say('B_H' + creep.carry.energy)\n      const storage = Game.spawns.Spawn1.room.storage\n      // If there isn't storage then withdraw from sources\n      if (!storage) {\n        const source: Source | null = creep.pos.findClosestByPath(FIND_SOURCES)\n        if (source !== null) {\n          const creepHarvest = creep.harvest(source)\n          // console.log(\"Status(\" + creep.name + \") - harvest: \" + creepHarvest)\n          if (creepHarvest === ERR_NOT_IN_RANGE) {\n            if (!creep.fatigue) {\n              const moveRes = creep.travelTo(source)\n              if (moveRes !== 0) {\n                console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n              }\n            }\n          }\n        }\n      } else {\n        const creepWithdraw = creep.withdraw(storage, RESOURCE_ENERGY)\n        // console.log(\"Status(\" + creep.name + \") - harvest: \" + creepHarvest)\n        if (creepWithdraw === ERR_NOT_IN_RANGE) {\n          if (!creep.fatigue) {\n            const moveRes = creep.travelTo(storage)\n            if (moveRes !== 0) {\n              console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  public static runUpgrader (creep: Creep) {\n    if (creep.memory.working === true && creep.carry.energy === 0) {\n      creep.memory.working = false\n    } else if (creep.memory.working === false && creep.carry.energy === creep.carryCapacity) {\n      creep.memory.working = true\n    }\n    if (creep.memory.working === true) {\n      creep.say('U_U' + creep.carry.energy)\n      creep.memory.task = 'upgrade'\n      if (creep.room.controller === undefined) {\n        throw new Error('Creep looking for non existent controller')\n      }\n      const creepUpgrade = creep.upgradeController(creep.room.controller)\n      // console.log(\"Status(\" + creep.name + \") - upgrade: \" + creepUpgrade)\n      if (creepUpgrade === ERR_NOT_IN_RANGE) {\n        if (!creep.fatigue) {\n          const moveRes = creep.travelTo(creep.room.controller)\n          if (moveRes !== 0) {\n            console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n          }\n        }\n      }\n    } else {\n      creep.say('U_H' + creep.carry.energy)\n      creep.memory.task = 'harvest'\n      const storage = Game.spawns.Spawn1.room.storage\n      // const storage = false\n      if (!storage) {\n        const source: Source | null = creep.pos.findClosestByPath(FIND_SOURCES)\n        if (source !== null) {\n          const creepHarvest = creep.harvest(source)\n          // console.log(\"Status(\" + creep.name + \") - harvest: \" + creepHarvest)\n          if (creepHarvest === ERR_NOT_IN_RANGE) {\n            if (!creep.fatigue) {\n              const moveRes = creep.travelTo(source)\n              if (moveRes !== 0) {\n                console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n              }\n            }\n          }\n        }\n      } else {\n        const creepWithdraw = creep.withdraw(storage, RESOURCE_ENERGY)\n        // console.log(\"Status(\" + creep.name + \") - harvest: \" + creepHarvest)\n        if (creepWithdraw === ERR_NOT_IN_RANGE) {\n          if (!creep.fatigue) {\n            const moveRes = creep.travelTo(storage)\n            if (moveRes !== 0) {\n              console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n            }\n          }\n        }\n      }\n      // // var source = creep.pos.findClosestByPath(FIND_SOURCES)\n      // var source\n\n      // const tombStone = creep.pos.findClosestByPath(FIND_RUINS, {\n      //   filter: (r) => r.store.energy !== 0\n      // })\n      // if (tombStone) {\n      //   source = tombStone\n      //   const creepWithdraw = creep.withdraw(tombStone, RESOURCE_ENERGY)\n      //   if (creepWithdraw === ERR_NOT_IN_RANGE && !creep.fatigue) {\n      //     creep.travelTo(tombStone)\n      //   }\n      // } else {\n      //   source = Game.spawns.Spawn1.room.storage\n      //   const creepHarvest = creep.withdraw(source, RESOURCE_ENERGY)\n      //   // console.log(\"Status(\" + creep.name + \") - harvest: \" + creepHarvest)\n      //   if (creepHarvest === ERR_NOT_IN_RANGE) {\n      //     if (!creep.fatigue) {\n      //       const moveRes = creep.travelTo(source, { visualizePathStyle: {} })\n      //       if (moveRes !== 0) {\n      //         console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n      //       }\n      //     }\n      //   }\n      // }\n    }\n  }\n\n  public static runRepairer (creep: Creep) {\n    if (creep.memory.working === true && creep.carry.energy === 0) {\n      creep.memory.working = false\n    } else if (creep.memory.working === false && creep.carry.energy === creep.carryCapacity) {\n      creep.memory.working = true\n    }\n    if (creep.memory.working === true) {\n      creep.memory.task = 'repair'\n      creep.say('R_R' + creep.carry.energy)\n      const structure = creep.pos.findClosestByPath(FIND_STRUCTURES, {\n        filter: (s) => s.hits < s.hitsMax && s.hits < 750000 // && s.structureType !== STRUCTURE_WALL\n      })\n      // console.log(structure)\n      if (structure !== null) {\n        // console.log('Defined - ' + structure)\n        const creepRepair = creep.repair(structure)\n        if (creepRepair === ERR_NOT_IN_RANGE) {\n          creep.travelTo(structure)\n        }\n      } else {\n        RoleManager.runBuilder(creep)\n      }\n    } else {\n      creep.memory.task = 'harvest'\n      creep.say('R_H' + creep.carry.energy)\n      const storage = Game.spawns.Spawn1.room.storage\n      if (!storage) {\n        const source: Source | null = creep.pos.findClosestByPath(FIND_SOURCES)\n        if (source !== null) {\n          const creepHarvest = creep.harvest(source)\n          // console.log(\"Status(\" + creep.name + \") - harvest: \" + creepHarvest)\n          if (creepHarvest === ERR_NOT_IN_RANGE) {\n            if (!creep.fatigue) {\n              const moveRes = creep.travelTo(source)\n              if (moveRes !== 0) {\n                console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n              }\n            }\n          }\n        }\n      } else {\n        const creepWithdraw = creep.withdraw(storage, RESOURCE_ENERGY)\n        // console.log(\"Status(\" + creep.name + \") - harvest: \" + creepHarvest)\n        if (creepWithdraw === ERR_NOT_IN_RANGE) {\n          if (!creep.fatigue) {\n            const moveRes = creep.travelTo(storage)\n            if (moveRes !== 0) {\n              console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  public static runHauler (creep: Creep) {\n    if (creep.memory.working === true && creep.carry.energy === 0) {\n      creep.memory.working = false\n    } else if (creep.memory.working === false && creep.carry.energy === creep.carryCapacity) {\n      creep.memory.working = true\n    }\n\n    if (creep.memory.working) {\n      creep.say('🚚', true)\n      creep.memory.task = 'deposit'\n      // Attempt to transfer energy to storage\n      if (creep.room.storage === undefined) {\n        throw new Error('creep.room.storage is undefined')\n      }\n      const creepTransfer = creep.transfer(creep.room.storage, RESOURCE_ENERGY)\n      if (creepTransfer === ERR_NOT_IN_RANGE) {\n        if (!creep.fatigue) {\n          const moveRes = creep.travelTo(creep.room.storage)\n          if (moveRes !== 0) {\n            console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n          }\n        }\n      }\n    } else {\n      creep.say('🗑️', true)\n      const container: StructureContainer | null = Game.getObjectById(creep.memory.containerId)\n      if (container === null) {\n        throw new Error('Unable to locate container')\n      }\n      // Get energy from container\n      const creepWithdraw = creep.withdraw(container, RESOURCE_ENERGY)\n      if (creepWithdraw === ERR_NOT_IN_RANGE) {\n        if (!creep.fatigue) {\n          const moveRes = creep.travelTo(container)\n          if (moveRes !== 0) {\n            console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n          }\n        }\n      }\n    }\n  }\n\n  public static runPickupper (creep: Creep) {\n    if (creep.memory.working === true && creep.store.getUsedCapacity() === 0) {\n      creep.memory.working = false\n    } else if (creep.memory.working === false && creep.store.getFreeCapacity() === 0) {\n      creep.memory.working = true\n    }\n\n    // If there is no target room throw error as that is not supported currently\n    if (!creep.memory.targetRoom) {\n      throw new Error('No target room for pickupper' + creep.name)\n    }\n\n    if (!creep.memory.homeRoom) {\n      throw new Error('No home room for pickupper')\n    }\n\n    /**\n     *\n     * @type {Room}\n     */\n    const homeRoom = Game.spawns[creep.memory.homeRoom].room\n    if (creep.memory.working === false) {\n      // If creep is already in room them harvest resources\n      if (creep.room.name === creep.memory.targetRoom) {\n        console.log('here')\n        const ruinTargets = creep.room.find(FIND_RUINS, {\n          // filter: (ruin) => Object.entries(ruin.store).length !== 0 && Object.entries()\n          filter: function (ruin) {\n            const entries = Object.entries(ruin.store)\n            return entries.length !== 0 && entries.length !== 1 && ruin.store[RESOURCE_ENERGY] > 0\n          }\n        })\n        if (ruinTargets.length !== 0) {\n          creep.memory.task = 'gathering'\n          creep.say('🗑️')\n          const resources: ResourceConstant[] | null = _.filter(<ResourceConstant[]>Object.keys(ruinTargets[0].store), resource => ruinTargets[0].store[resource] > 0 && resource !== RESOURCE_ENERGY)\n          // console.log(\"Target: \" + ruinTargets[0] + \"|| Resouce: \" + resources[0] + \"|| Ammount: \" + ruinTargets[0].store[resources[0]])\n          if (creep.withdraw(ruinTargets[0], resources[0]) === ERR_NOT_IN_RANGE) {\n            creep.travelTo(ruinTargets[0])\n          }\n        } else {\n          Game.flags.pickup.remove()\n          creep.memory.working = true\n        }\n        // Otherwise move towards room\n      } else {\n        if (creep.ticksToLive === undefined) {\n          throw new Error('ticksToLive is undefined')\n        }\n        if (creep.ticksToLive < 150) {\n          creep.suicide()\n        } else {\n          creep.memory.task = 'travelling'\n          creep.say('🏃')\n          if (!creep.fatigue) {\n            // /**\n            //  *\n            //  * @type {ExitConstant | ERR_NO_PATH | ERR_INVALID_ARGS}\n            //  */\n            // const exit = creep.room.findExitTo(creep.memory.targetRoom)\n            const moveRes = creep.travelTo(Game.flags.pickup)\n            if (moveRes !== 0) {\n              console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n            }\n          }\n        }\n      }\n    } else {\n      // If creep is in home room then deposit, otherwise move to home\n      if (creep.room.name === homeRoom.name) {\n        if (creep.room.storage === undefined) {\n          throw new Error('creep.room.storage is undefined')\n        }\n        const creepTransfer = creep.transfer(creep.room.storage, <ResourceConstant>Object.keys(creep.store)[0])\n        // console.log(\"Status(\" + creep.name + \") - upgrade: \" + creepTransfer)\n        if (creepTransfer === ERR_NOT_IN_RANGE) {\n          if (!creep.fatigue) {\n            const moveRes = creep.travelTo(creep.room.storage)\n            if (moveRes !== 0) {\n              console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n            }\n          }\n        }\n      } else {\n        creep.say('🏃')\n        if (!creep.fatigue) {\n          if (homeRoom.storage === undefined) {\n            throw new Error('creep.room.storage is undefined')\n          }\n          const moveRes = creep.travelTo(homeRoom.storage)\n          if (moveRes !== 0) {\n            console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n          }\n        }\n      }\n    }\n\n    // if(creep.room.storage && creep.room.find(FIND_RUINS, )) {\n    //  if(creep.memory.working === true) {\n    //    creep.memory.task \"gathering\"\n    //    creep.say(\"Gathering\")\n    //  } else {\n\n    //  }\n    // } else {\n    //  roleHarvester.run(creep)\n    // }\n    // if (creep.memory.working === true) {\n    //   creep.memory.task = 'transfer'\n    //   creep.say('P_T' + creep.carry.energy)\n\n    // } else {\n    //   creep.memory.task = 'harvest'\n    //   creep.say('H_H' + creep.carry.energy)\n    //   const storage = Game.spawns.Spawn1.room.storage\n    //   if (!storage) {\n    //     const source = creep.pos.findClosestByPath(FIND_SOURCES)\n    //     const creepHarvest = creep.harvest(source)\n    //     creep.memory.fromStorage = false\n    //     // console.log(\"Status(\" + creep.name + \") - harvest: \" + creepHarvest)\n    //     if (creepHarvest === ERR_NOT_IN_RANGE) {\n    //       if (!creep.fatigue) {\n    //         const moveRes = creep.travelTo(source, { visualizePathStyle: {} })\n    //         if (moveRes !== 0) {\n    //           console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n    //         }\n    //       }\n    //     }\n    //   } else {\n\n    //     const creepWithdraw = creep.withdraw(storage, RESOURCE_ENERGY)\n    //     creep.memory.fromStorage = true\n    //     // console.log(\"Status(\" + creep.name + \") - harvest: \" + creepHarvest)\n    //     if (creepWithdraw === ERR_NOT_IN_RANGE) {\n    //       if (!creep.fatigue) {\n    //         const moveRes = creep.travelTo(storage, { visualizePathStyle: {} })\n    //         if (moveRes !== 0) {\n    //           console.log('Error(' + creep.name + '): Move Error - ' + moveRes)\n    //         }\n    //       }\n    //     }\n    //   }\n    // }\n  }\n\n  public static runTraveller (creep: Creep) {\n    const target = Game.flags.investigate\n    if (target) {\n      // console.log(enemies[0])\n      // console.log('X: ' + enemies[0].pos.x + '| Y: ' + enemies[0].pos.y)\n      creep.travelTo(target)\n    } else if (Game.flags.traveler_wait) {\n      // console.log('test')\n      creep.travelTo(Game.flags.traveler_wait)\n    }\n  }\n}\n","import './utils/Traveler/Traveler'\nimport * as Profiler from './utils/Profiler/Profiler'\n// import { ErrorMapper } from './utils/ErrorMapper'\nimport { TowerHelper } from './Helpers/TowerHelper'\nimport { SpawnHelper } from './Helpers/SpawnHelper'\nimport { RoleManager } from './Managers/RoleManager'\n\nconst minHarvesters = 1\nconst minBuilders = 2\nconst minRepairers = 2\nconst maxUpgraders = 1\n// const minPickup = 2\nconst minAttacker = 1\n\n// telephone.initializeTelephone()\n// telephone.requestTelephone('Ratstail91', telephone.TELEPHONE_INFO)\n// console.log(telephone.getTelephone('Ratstail91', telephone.TELEPHONE_INFO))\n\n// @ts-ignore\nglobal.Profiler = Profiler.init()\nexport const loop = () => {\n  // profiler.wrap(function () {\n\n  // console.log(JSON.stringify(telephone.getTelephone('Ratstail91', telephone.TELEPHONE_INFO)))\n  for (const name in Game.creeps) {\n    /**\n     * @type {Creep}\n     */\n    const creep = Game.creeps[name]\n    switch (creep.memory.role) {\n      case 'harvester':\n        // util.baseRun(creep, creep.transfer, [Game.spawns.spawn_1, RESOURCE_ENERGY], creep.harvest, creep.pos.findClosestByPath(FIND_SOURCES))\n        RoleManager.runHarvester(creep)\n        break\n\n      case 'upgrader':\n        // util.baseRun(creep, creep.upgradeController, [roomController], creep.harvest, creep.pos.findClosestByPath(FIND_SOURCES))\n        RoleManager.runUpgrader(creep)\n        break\n\n      case 'builder':\n        // util.baseRun(creep, creep.build, [creep.pos.findClosestByRange(FIND_CONSTRUCTION_SITES)], creep.harvest, creep.pos.findClosestByPath(FIND_SOURCES))\n        RoleManager.runBuilder(creep)\n        break\n\n      case 'repairer':\n        RoleManager.runRepairer(creep)\n        break\n\n      case 'attacker':\n        RoleManager.runAttacker(creep)\n        break\n\n      case 'traveler':\n        RoleManager.runTraveller(creep)\n        break\n\n      case 'pickupper':\n        RoleManager.runPickupper(creep)\n        break\n\n      case 'miner':\n        RoleManager.runMiner(creep)\n        break\n\n      case 'hauler':\n        RoleManager.runHauler(creep)\n        break\n\n      default:\n        console.log('NO ROLE: ' + creep.name)\n        break\n    }\n  }\n\n  // find all towers\n  const towers = Game.spawns.Spawn1.room.find<StructureTower>(FIND_MY_STRUCTURES, {\n    filter: s => s.structureType === STRUCTURE_TOWER\n  })\n  // for each tower\n  for (/** @type {StructureTower} */const tower of towers) {\n    // run tower logic\n    TowerHelper.runDefense(tower)\n  }\n\n  /**\n   * @type {Creep[][]}\n   */\n  const myCreeps = _.groupBy(Game.creeps, (creep) => creep.memory.role)\n\n  // eslint-disable-next-line dot-notation\n  const numberOfHarvesters = myCreeps['harvester'] ? myCreeps['harvester'].length : 0\n  // eslint-disable-next-line dot-notation\n  const numberOfUpgraders = myCreeps['upgrader'] ? myCreeps['upgrader'].length : 0\n  // eslint-disable-next-line dot-notation\n  const numberOfBuilders = myCreeps['builder'] ? myCreeps['builder'].length : 0\n  // eslint-disable-next-line dot-notation\n  const numberOfRepairers = myCreeps['repairer'] ? myCreeps['repairer'].length : 0\n  // eslint-disable-next-line dot-notation\n  const numberOfAttackers = myCreeps['attacker'] ? myCreeps['attacker'].length : 0\n  // eslint-disable-next-line dot-notation\n  // const numberOfPickuppers = myCreeps['pickupper'] ? myCreeps['pickupper'].length : 0\n\n  const energy = Game.spawns.Spawn1.room.energyCapacityAvailable\n  let name\n  const spawn: StructureSpawn = Game.spawns.Spawn1\n  /**\n   * @type {Source[]}\n   */\n  const sources = spawn.room.find(FIND_SOURCES)\n  // Get sources and determine if a miner needs to spawn.\n  for (const source of sources) {\n    // If there are not creeps assigned to source already\n    if (!_.some(Game.creeps, c => c.memory.role === 'miner' && c.memory.sourceId === source.id)) {\n      // Verify that there is a container for them.\n      const containers = source.pos.findInRange(FIND_STRUCTURES, 1, {\n        filter: s => s.structureType === STRUCTURE_CONTAINER\n      })\n\n      if (containers.length > 0) {\n        name = SpawnHelper.createMiner(spawn, source.id, containers[0].id)\n        break\n      }\n    }\n  }\n\n  /**\n   * @type {StructureContainer[]}\n   */\n  const containers = Game.spawns.Spawn1.room.find(FIND_STRUCTURES, {\n    filter: s => s.structureType === STRUCTURE_CONTAINER\n  })\n  for (const /** @type {StructureContainer} */ aContainer of containers) {\n    /**\n     * @type {Creep[]}\n     */\n    // eslint-disable-next-line dot-notation\n    const assignedCreep = _.filter(myCreeps['hauler'], (c) => c.memory.containerId === aContainer.id)\n    if (assignedCreep.length === 0) {\n      name = SpawnHelper.createCustomCreep(spawn, 1300, 'hauler', [CARRY, CARRY, MOVE], {\n        role: 'hauler',\n        working: false,\n        containerId: aContainer.id\n      })\n      break\n    }\n  }\n  if (name === undefined) {\n    switch (true) {\n      case numberOfHarvesters < minHarvesters:\n        name = SpawnHelper.createCustomCreep(spawn, energy, 'harvester', undefined, { homeRoom: spawn.room.name })\n        if (name === ERR_NOT_ENOUGH_ENERGY) {\n          name = SpawnHelper.createCustomCreep(spawn, spawn.room.energyAvailable, 'harvester', undefined, { homeRoom: Game.spawns.Spawn1.room.name })\n        }\n        break\n\n      case numberOfAttackers < minAttacker:\n        name = Game.spawns.Spawn1.createCreep([ATTACK, MOVE, ATTACK, MOVE], undefined, {\n          role: 'attacker',\n          working: false\n        })\n        break\n\n      case numberOfRepairers < minRepairers:\n        name = SpawnHelper.createCustomCreep(spawn, 1300, 'repairer')\n        break\n\n      case numberOfBuilders < minBuilders:\n        name = SpawnHelper.createCustomCreep(spawn, 1300, 'builder')\n        break\n\n        // FALL THROUGH IF NO FLAGS!\n        // case numberOfPickuppers < minPickup:\n        //   /**\n        //    * @type {Flag[]}\n        //    */\n        //   const pickupFlags = _.filter(Game.flags, (flag) => flag.name === 'pickup')\n        //   if (pickupFlags.length !== 0) {\n        //     name = Game.spawns.Spawn1.createCustomCreep(1300, 'pickupper', [MOVE, CARRY], { targetRoom: pickupFlags[0].pos.roomName })\n        //     break\n        //   }\n\n      case numberOfUpgraders < maxUpgraders:\n        name = SpawnHelper.createCustomCreep(spawn, 1300, 'upgrader')\n        break\n    }\n  }\n  //   if (numberOfHarvesters < minHarvesters) {\n  //     name = Game.spawns.Spawn1.createCustomCreep(energy, 'harvester', undefined, { home: Game.spawns.Spawn1.room.name })\n  //     if (name === ERR_NOT_ENOUGH_ENERGY) {\n  //       name = Game.spawns.Spawn1.createCustomCreep(Game.spawns.Spawn1.room.energyAvailable, 'harvester', undefined, { home: Game.spawns.Spawn1.room.name })\n  //     }\n  //   } else if (numberOfAttackers < minAttacker) {\n  //     name = Game.spawns.Spawn1.createCreep([ATTACK, MOVE, ATTACK, MOVE], undefined, {\n  //       role: 'attacker',\n  //       working: false\n  //     })\n  //   } else if (numberOfRepairers < minRepairers) {\n  //     name = Game.spawns.Spawn1.createCustomCreep(energy, 'repairer')\n  //     // console.log(name)\n  //   } else if (numberOfBuilders < minBuilders) {\n  //     name = Game.spawns.Spawn1.createCustomCreep(energy, 'builder')\n  //   } else if (numberOfUpgraders < maxUpgraders) {\n  //     name = Game.spawns.Spawn1.createCustomCreep(energy, 'upgrader')\n  //   }\n  // }\n\n  if (_.isString(name)) {\n    console.log('Spawned new ' + Game.creeps[name].memory.role + ' creep: ' + name)\n  }\n\n  if (!Memory.stats) {\n    Memory.stats = {}\n  }\n\n  Memory.stats['cpu.getUsed'] = Game.cpu.getUsed()\n  Memory.stats['cpu.limit'] = Game.cpu.limit\n  Memory.stats['cpu.bucket'] = Game.cpu.bucket\n\n  Memory.stats['gcl.progress'] = Game.gcl.progress\n  Memory.stats['gcl.progressTotal'] = Game.gcl.progressTotal\n  Memory.stats['gcl.level'] = Game.gcl.level\n  _.forEach(Object.keys(Game.rooms), function (roomName) {\n    const room = Game.rooms[roomName]\n\n    if (room.controller && room.controller.my) {\n      Memory.stats['rooms.' + roomName + '.rcl.level'] = room.controller.level\n      Memory.stats['rooms.' + roomName + '.rcl.progress'] = room.controller.progress\n      Memory.stats['rooms.' + roomName + '.rcl.progressTotal'] = room.controller.progressTotal\n\n      Memory.stats['rooms.' + roomName + '.spawn.energy'] = room.energyAvailable\n      Memory.stats['rooms.' + roomName + '.spawn.energyTotal'] = room.energyCapacityAvailable\n\n      if (room.storage) {\n        Memory.stats['rooms.' + roomName + '.storage.energy'] = room.storage.store.energy\n      }\n    }\n  })\n  // })\n// })\n}\n"],"names":["Profiler.init"],"mappings":"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"};